<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="8dp">

    <android.support.constraint.Guideline
        android:id="@+id/bottom_guideline"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        app:layout_constraintGuide_percent=".45" />

    <TextView
        android:id="@+id/source_text"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:gravity="center"
        android:textAppearance="@style/TextAppearance.AppCompat.Large"
        app:layout_constraintBottom_toBottomOf="@+id/bottom_guideline"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        tools:text="You can also make one dimension be a fraction of the other by setting only width or height and
 using layout_aspectRatio for the second one to be calculated automatically. For
 example, if you would like to achieve 16:9 aspect ratio, you can write:" />

    <TextView
        android:id="@+id/recognized_text"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:gravity="center"
        android:textAppearance="@style/TextAppearance.AppCompat.Large"
        android:textStyle="italic"
        app:layout_constraintBottom_toTopOf="@id/speak"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/bottom_guideline"
        tools:text="You can also make one dimension be a fraction of the other by setting only width or height and
 using layout_aspectRatio for the second one to be calculated automatically. For
 example, if you would like to achieve 16:9 aspect ratio, you can write:" />

    <Button
        android:id="@+id/speak"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/speak"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

    <Button
        android:id="@+id/next"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/next"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

    <ProgressBar
        android:id="@+id/progress"
        android:layout_width="96dp"
        android:layout_height="96dp"
        app:layout_constraintBottom_toBottomOf="@+id/recognized_text"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

</android.support.constraint.ConstraintLayout>


